import app from '../src/app.js'
import http from 'http'
import dotenv from 'dotenv'
// IMPORTA AQU√ç TU INSTANCIA DE SEQUELIZE
// Aseg√∫rate de cambiar la ruta './db/sequelizeConfig.js' por la ruta real
// donde inicializas y exportas tu objeto sequelize.
import { sequelize } from '../ruta/a/tu/sequelizeConfig.js'; 

dotenv.config()

const port = process.env.PORT || 3000
const server = http.createServer(app)

// Funci√≥n AS√çNCRONA para manejar la conexi√≥n a la DB y el inicio del servidor
async function startServer() {
    try {
        // --- 1. CONEXI√ìN Y SINCRONIZACI√ìN DE SEQUELIZE ---
        
        console.log("Comprobando conexi√≥n a DB...");
        // Verifica la conexi√≥n
        await sequelize.authenticate(); 
        console.log("Conexi√≥n a DB exitosa.");

        // L√çNEA CRUCIAL: Crea las tablas (si no existen) bas√°ndose en los modelos
        // Si ya existen, no hace nada.
        await sequelize.sync(); 
        console.log("Modelos sincronizados. Tablas creadas/verificadas.");
        
        // --- 2. INICIO DEL SERVIDOR ---
        server.listen(port, () => {
            console.log(`üöÄ Servidor corriendo en http://localhost:${port}`)
        })

    } catch (error) {
        console.error("‚ùå Error FATAL: No se pudo conectar la DB o iniciar el servidor:", error);
        // Si hay un error, el servidor no se iniciar√°
        process.exit(1); 
    }
}

// Llamar a la funci√≥n para iniciar todo
startServer();
```

---

### Lo que Necesitas Confirmar

El √∫nico paso que falta es asegurarte de que esta l√≠nea:

```javascript
import { sequelize } from '../ruta/a/tu/sequelizeConfig.js'; 